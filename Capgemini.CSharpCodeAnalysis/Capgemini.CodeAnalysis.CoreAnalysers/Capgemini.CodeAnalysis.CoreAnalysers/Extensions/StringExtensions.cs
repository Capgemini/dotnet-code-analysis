using System.Text.RegularExpressions;

namespace Capgemini.CodeAnalysis.CoreAnalysers.Extensions
{
    /// <summary>
    /// The <see cref="StringExtensions"/> class.
    /// </summary>
    internal static class StringExtensions
    {
        /// <summary>
        /// The IsGeneratedFileName method will confirm whether the file path is for an auto-generated file.
        /// </summary>
        /// <param name="filePath">The full file name and path to check.</param>
        /// <returns><c>true</c>if the file path identifies an auto-generated file, otherwise <c>false</c>.</returns>
        /// <seealso cref="IsSourceCodeAutoGenerated(string)"/>
        internal static bool IsGeneratedFileName(this string filePath)
        {
            return Regex.IsMatch(
                                filePath,
                                @"(\b(\\bin|\\service|\\obj|\\TemporaryGeneratedFile_|assemblyinfo|assemblyattributes|designer.|\.generated.|\.g.|\.i.)\b)",
                                RegexOptions.IgnoreCase);
        }

        /// <summary>
        /// The IsSourceCodeAutoGenerated method will confirm whether the source code was auto-generated.
        /// </summary>
        /// <param name="sourceCode">The source code to check.</param>
        /// <returns><c>true</c>if the source code was auto-generated file, otherwise <c>false</c>.</returns>
        /// <seealso cref="IsGeneratedFileName(string)"/>
        internal static bool IsSourceCodeAutoGenerated(this string sourceCode)
        {
            return Regex.IsMatch(sourceCode, @"^\/\/(-)+(.)*(\n)*(\t)*\/\/(\s)*<auto-generated>(\s)*", RegexOptions.IgnoreCase) ||
                   Regex.IsMatch(sourceCode, @"^\/\/(\s)*<auto-generated>(\s)*", RegexOptions.IgnoreCase);
        }
    }
}